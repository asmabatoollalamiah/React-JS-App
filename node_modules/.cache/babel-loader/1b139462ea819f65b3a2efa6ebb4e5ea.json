{"ast":null,"code":"var _jsxFileName = \"/Users/asmabatoollalamiah/Desktop/Asma/Spring/concepts and structures in internet computing/Assignment4/internet-computing-react-app/src/pages/MainPage.js\";\nimport React from 'react';\nimport pic from '../images/welcome.jpg';\nimport XMLData from '../files/cd_catalog.xml';\nimport PostsPage from './PostsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      elements: []\n    };\n    this.loadXMLDoc();\n  }\n\n  loadXMLDoc() {\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(xmlhttp.responseText, 'text/xml');\n    var xmlhttp = new XMLHttpRequest();\n\n    xmlhttp.onload = function (ex) {\n      var i;\n      var post = xmlDoc.getElementsByTagName(\"post\");\n      var postList = [];\n\n      for (i = 0; i < post.length; i++) {\n        var map = {\n          \"title\": post[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n          \"author\": post[i].getElementsByTagName(\"author\")[0].childNodes[0].nodeValue,\n          \"date\": post[i].getElementsByTagName(\"date\")[0].childNodes[0].nodeValue,\n          \"image\": post[i].getElementsByTagName(\"summary\")[0].getElementsByTagName(\"image_path\")[0].childNodes[0].nodeValue,\n          \"text\": post[i].getElementsByTagName(\"summary\")[0].getElementsByTagName(\"text\")[0].childNodes[0].nodeValue,\n          \"body\": post[i].getElementsByTagName(\"body\")[0].childNodes[0].nodeValue\n        };\n        postList.push(map);\n      }\n\n      this.setState({\n        elements: postList\n      });\n    }.bind(this);\n\n    xmlhttp.open(\"GET\", XMLData, true);\n    xmlhttp.send();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsPage, {\n        element: this.state.elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n  /*prepareView = (xml) => {\n     var i;\n     var xmlDoc = xml.responseXML;\n     var table=\"\";\n     var x = xmlDoc.getElementsByTagName(\"post\");\n     for (i = 0; i <x.length; i++) { \n        var summary =  x[i].getElementsByTagName(\"summary\")[0];\n       table += \"<div className='row'><div className='leftcolumn'><div className='card'><h1>\" +\n       x[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue +\n       \"</h1><h2>\" +\n       x[i].getElementsByTagName(\"date\")[0].childNodes[0].nodeValue +\n       \"</h2><h3>\" + \n       x[i].getElementsByTagName(\"author\")[0].childNodes[0].nodeValue +\n       \"</h3><summary><div 'fakeimg'><img>\" + \n       summary.getElementsByTagName(\"image_path\")[0].childNodes[0].nodeValue +\n       \"</img><p>\" +\n       summary.getElementsByTagName(\"text\")[0].childNodes[0].nodeValue +\n       \"</summary><p>\" + \n       x[i].getElementsByTagName(\"body\")[0].childNodes[0].nodeValue +\n       \"</p></div></div></div>\";\n     }\n     document.getElementById(\"demo\").innerHTML = table;\n   }*/\n\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/asmabatoollalamiah/Desktop/Asma/Spring/concepts and structures in internet computing/Assignment4/internet-computing-react-app/src/pages/MainPage.js"],"names":["React","pic","XMLData","PostsPage","MainPage","Component","constructor","state","elements","loadXMLDoc","parser","DOMParser","xmlDoc","parseFromString","xmlhttp","responseText","XMLHttpRequest","onload","ex","i","post","getElementsByTagName","postList","length","map","childNodes","nodeValue","push","setState","bind","open","send","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACA,SAAKC,UAAL;AAEH;;AAKDA,EAAAA,UAAU,GAAG;AACX,QAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,QAAIC,MAAM,GAAGF,MAAM,CAACG,eAAP,CAAuBC,OAAO,CAACC,YAA/B,EAA6C,UAA7C,CAAb;AACE,QAAID,OAAO,GAAG,IAAIE,cAAJ,EAAd;;AACAF,IAAAA,OAAO,CAACG,MAAR,GAAiB,UAAUC,EAAV,EAAc;AACvB,UAAIC,CAAJ;AACA,UAAIC,IAAI,GAAGR,MAAM,CAACS,oBAAP,CAA4B,MAA5B,CAAX;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAEC,IAAI,CAACG,MAApB,EAA4BJ,CAAC,EAA7B,EAAiC;AAC/B,YAAIK,GAAG,GAAG;AACR,mBAASJ,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,EAAyCI,UAAzC,CAAoD,CAApD,EAAuDC,SADxD;AAER,oBAAUN,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,QAA7B,EAAuC,CAAvC,EAA0CI,UAA1C,CAAqD,CAArD,EAAwDC,SAF1D;AAGR,kBAAQN,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,MAA7B,EAAqC,CAArC,EAAwCI,UAAxC,CAAmD,CAAnD,EAAsDC,SAHtD;AAIR,mBAASN,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,SAA7B,EAAwC,CAAxC,EAA2CA,oBAA3C,CAAgE,YAAhE,EAA8E,CAA9E,EAAiFI,UAAjF,CAA4F,CAA5F,EAA+FC,SAJhG;AAKR,kBAAQN,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,SAA7B,EAAwC,CAAxC,EAA2CA,oBAA3C,CAAgE,MAAhE,EAAwE,CAAxE,EAA2EI,UAA3E,CAAsF,CAAtF,EAAyFC,SALzF;AAMR,kBAAQN,IAAI,CAACD,CAAD,CAAJ,CAAQE,oBAAR,CAA6B,MAA7B,EAAqC,CAArC,EAAwCI,UAAxC,CAAmD,CAAnD,EAAsDC;AANtD,SAAV;AASAJ,QAAAA,QAAQ,CAACK,IAAT,CAAcH,GAAd;AACD;;AACD,WAAKI,QAAL,CAAc;AAAEpB,QAAAA,QAAQ,EAAEc;AAAZ,OAAd;AACP,KAjBgB,CAiBfO,IAjBe,CAiBV,IAjBU,CAAjB;;AAkBAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,KAAb,EAAoB5B,OAApB,EAA6B,IAA7B;AACAY,IAAAA,OAAO,CAACiB,IAAR;AAEH;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEA,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnEuC;;AAqEvC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport pic from '../images/welcome.jpg';\nimport XMLData from '../files/cd_catalog.xml';\nimport PostsPage from './PostsPage';\nclass MainPage extends React.Component {\n    constructor(){\n        super();\n        this.state = {elements: [] }\n        this.loadXMLDoc();\n         \n    }\n\n\n    \n\n    loadXMLDoc() {\n      let parser = new DOMParser();\n      let xmlDoc = parser.parseFromString(xmlhttp.responseText, 'text/xml');\n        var xmlhttp = new XMLHttpRequest();\n        xmlhttp.onload = function (ex) {\n                var i;\n                var post = xmlDoc.getElementsByTagName(\"post\");\n                var postList = [];\n                for (i = 0; i <post.length; i++) { \n                  var map = {\n                    \"title\": post[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n                    \"author\": post[i].getElementsByTagName(\"author\")[0].childNodes[0].nodeValue,\n                    \"date\": post[i].getElementsByTagName(\"date\")[0].childNodes[0].nodeValue,\n                    \"image\": post[i].getElementsByTagName(\"summary\")[0].getElementsByTagName(\"image_path\")[0].childNodes[0].nodeValue,\n                    \"text\": post[i].getElementsByTagName(\"summary\")[0].getElementsByTagName(\"text\")[0].childNodes[0].nodeValue,\n                    \"body\": post[i].getElementsByTagName(\"body\")[0].childNodes[0].nodeValue,\n                  };\n                  \n                  postList.push(map);\n                }\n                this.setState({ elements: postList });\n        }.bind(this);\n        xmlhttp.open(\"GET\", XMLData, true);\n        xmlhttp.send();\n\n    }\n    render() {\n      return (\n        <React.Fragment>\n        {/* <div  className=\"flex-vertical\" >{this.state.test}</div>      */}\n        <PostsPage element={this.state.elements}/>\n        </React.Fragment>\n      );\n    }\n     /*prepareView = (xml) => {\n        var i;\n        var xmlDoc = xml.responseXML;\n        var table=\"\";\n        var x = xmlDoc.getElementsByTagName(\"post\");\n        for (i = 0; i <x.length; i++) { \n           var summary =  x[i].getElementsByTagName(\"summary\")[0];\n          table += \"<div className='row'><div className='leftcolumn'><div className='card'><h1>\" +\n          x[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue +\n          \"</h1><h2>\" +\n          x[i].getElementsByTagName(\"date\")[0].childNodes[0].nodeValue +\n          \"</h2><h3>\" + \n          x[i].getElementsByTagName(\"author\")[0].childNodes[0].nodeValue +\n          \"</h3><summary><div 'fakeimg'><img>\" + \n          summary.getElementsByTagName(\"image_path\")[0].childNodes[0].nodeValue +\n          \"</img><p>\" +\n          summary.getElementsByTagName(\"text\")[0].childNodes[0].nodeValue +\n          \"</summary><p>\" + \n          x[i].getElementsByTagName(\"body\")[0].childNodes[0].nodeValue +\n          \"</p></div></div></div>\";\n        }\n        document.getElementById(\"demo\").innerHTML = table;\n      }*/\n}\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}